- hosts: webserver
  become: true

  roles:
    - geerlingguy.apache
    - geerlingguy.mysql
    - geerlingguy.php
    
  tasks:
    - name: Install prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

    - name: Install LAMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'python3-pip','unzip', 'git', 'php', 'libapache2-mod-php', 'apache2', 'apache2-utils', 'mysql-server', 'php', 'php-mysql', 'php-curl', 'php-xml', 'memcached', 'libmemcached-tools', 'php-memcached' ]
 
  # MySQL Configuration
    - name: Install PyMySQL
      pip:
        name: pymysql
        state: present
    
    - name: Create `/root/.my.cnf`  with root password credentials
      template:
        src:  "files/my.cnf.j2"
        dest: /root/.my.cnf
        owner: root
        mode: 0600

    - name: Sets the root password
      community.mysql.mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Removes all anonymous user accounts
      community.mysql.mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Removes the MySQL test database
      community.mysql.mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
  
 #Create install app

    - name: Download project
      ansible.builtin.unarchive:
        src: https://github.com/qyjohn/simple-lamp/archive/refs/heads/master.zip
        dest: /tmp
        mode: '0755'
        remote_src: True

    - name: Rename dir
      shell: cp -r /tmp/simple-lamp-master/ /var/www/{{ http_host }}/

    - name: Chown directory host
      file:
        path: /var/www/{{ http_host }}/uploads/
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Copy configuration PHP 
      template:
        src: "files/config.php.j2"
        dest: "/var/www/{{ http_host }}/config.php"
      notify: Reload Apache

    - name: Import file.sql similar to mysql -u <username> -p <password> < hostname.sql
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: "{{ http_host }}"
        state: import
        target: /var/www/{{ http_host }}/simple_lamp.sql

  #Apache Configuration
    - name: Set up Apache virtualhost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
      notify: Reload Apache

    - name: Copy file config file
      ansible.builtin.copy:
        src: "/etc/apache2/sites-available/{{ http_conf }}"
        dest: "/etc/apache2/sites-available/{{ http_conf }}.conf"
        owner: root
        group: root
        mode: '0755'
        remote_src: True
      
    - name: Enable new site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      when: disable_default
      notify: Reload Apache

    - name: Restart memcached
      service:
        name: memcached
        state: restarted

    - name: Enable service memcached
      service:
        name: memcached
        enabled: yes

   # UFW Configuration
    - community.general.ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted
